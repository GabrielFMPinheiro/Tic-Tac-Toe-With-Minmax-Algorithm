{"version":3,"sources":["components/Cell/assets/x.png","components/Cell/assets/o.png","components/Cell/Cell.js","components/Button/Button.js","components/Board/Board.js","components/Header/Header.js","App.js","index.js"],"names":["Cell","value","this","props","xImage","oImage","id","eventHandler","className","onClick","src","chooseImg","alt","style","display","React","Component","Button","name","event","isActive","type","disabled","scores","tie","Board","state","board","player","isComputerPlaying","winner","playerPlayed","viewInitialScreen","target","setState","changePlayers","bestMove","result","forEach","chance","includes","move","bestScore","Infinity","cell","i","score","minmax","isMaximizing","Math","max","min","elements","document","getElementsByClassName","classList","remove","toggle","innerHTML","map","index","checkBtnsClicked","selectPlayer","initialScreen","finalGame","resetGame","game","binder","Header","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"+UAAe,G,MAAA,IAA0B,+BCA1B,MAA0B,8B,OCQnCA,E,+JACJ,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MACR,OAAc,IAAVA,EACKG,EACY,IAAVH,EACFI,EAEF,S,oBAGT,WACE,MAA6BH,KAAKC,MAA1BG,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,aAEZ,OACE,qBACEC,UAAU,iBACVF,GAAIA,EACJG,QAASF,EACT,cAAY,iBAJd,SAME,qBACEG,IAAKR,KAAKS,YACVC,IAAI,GACJJ,UAAU,aACVK,MAAO,CAAEC,QAA8B,SAArBZ,KAAKS,YAAyB,UAAY,QAC5D,cAAaL,U,GA1BJS,IAAMC,WAuCVhB,IC1CTiB,G,kKACJ,WACE,MAAyCf,KAAKC,MAAtCe,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOlB,EAArB,EAAqBA,MAAOmB,EAA5B,EAA4BA,SAE5B,OACE,wBAAQC,KAAK,SAASb,UAAWU,EAAMT,QAASU,EAAOG,SAAUF,EAAjE,SACGnB,Q,GANYc,IAAMC,YAmBZC,IChBTM,G,MAAS,CACb,EAAG,GACH,GAAI,GACJC,IAAK,IAsQQC,E,kDAlQb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,OAAQ,GACRC,mBAAmB,EACnBC,OAAQ,KACRC,cAAc,EACdC,mBAAmB,GATT,E,gDAad,YAA0B,IAAD,OACf1B,EADe,EAAV2B,OACL3B,GACR,EAA6CJ,KAAKwB,MAA1CE,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,MAAOE,EAAvB,EAAuBA,kBACL,KAAdF,EAAMrB,KACRqB,EAAMrB,GAAMsB,EACZ1B,KAAKgC,SAAS,CAAEH,cAAc,IAAQ,WACpC,GAAIF,GAAqB,EAAKH,MAAMK,aAClC,EAAKG,SAAS,CAAEN,OAAQ,EAAKO,iBAAmB,EAAKC,cAChD,CACL,IAAIC,EAAS,EAAKP,OAAOH,GACzB,EAAKO,SAAS,CAAEN,OAAQ,EAAKO,gBAAiBL,OAAQO,W,2BAM9D,WAEE,OAAkB,IADCnC,KAAKwB,MAAhBE,OACc,EAAI,I,oBAG5B,SAAOD,GACL,IAAIG,EAAS,KAsBb,MArBmB,CACjB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGEQ,SAAQ,SAACC,GAEhBZ,EAAMY,EAAO,MAAQZ,EAAMY,EAAO,KAClCZ,EAAMY,EAAO,MAAQZ,EAAMY,EAAO,KACb,KAArBZ,EAAMY,EAAO,MAEbT,EAASH,EAAMY,EAAO,QAIrBZ,EAAMa,SAAS,KAAkB,OAAXV,EAIpBA,EAHE,Q,sBAMX,WAAY,IAGNW,EAHK,OACT,EAA0BvC,KAAKwB,MAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACXc,GAAaC,IAEjBhB,EAAMW,SAAQ,SAACM,EAAMC,GACnB,GAAa,KAATD,EAAa,CACfjB,EAAMkB,GAAKjB,EACX,IAAIkB,EAAQ,EAAKC,OAAOpB,GAAO,EAAOC,GACtCD,EAAMkB,GAAK,GACPC,EAAQJ,IACVA,EAAYI,EACZL,EAAOI,OAKblB,EAAMc,GAAQ,EACd,IAAIJ,EAASnC,KAAK4B,OAAOH,GACzBzB,KAAKgC,SAAS,CACZP,MAAOA,EACPC,OAAQ1B,KAAKiC,gBACbL,OAAQO,EACRN,cAAc,M,oBAIlB,SAAOJ,EAAOqB,EAAcpB,GAAS,IAAD,OAC9BS,EAASnC,KAAK4B,OAAOH,GAEzB,GAAe,OAAXU,EACF,OAAOd,EAAOc,GAGhB,GAAIW,EAAc,CAChB,IAAIN,GAAaC,IASjB,OARAhB,EAAMW,SAAQ,SAACM,EAAMC,GACnB,GAAa,KAATD,EAAa,CACfjB,EAAMkB,GAAK,EACX,IAAIC,EAAQ,EAAKC,OAAOpB,GAAO,EAAOC,GACtCD,EAAMkB,GAAK,GACXH,EAAYO,KAAKC,IAAIJ,EAAOJ,OAGzBA,EAEP,IAAIA,EAAYC,IAShB,OARAhB,EAAMW,SAAQ,SAACM,EAAMC,GACnB,GAAa,KAATD,EAAa,CACfjB,EAAMkB,GAAK,EAAKV,gBAChB,IAAIW,EAAQ,EAAKC,OAAOpB,GAAO,EAAM,EAAKQ,iBAC1CR,EAAMkB,GAAK,GACXH,EAAYO,KAAKE,IAAIL,EAAOJ,OAGzBA,I,uBAIX,WACExC,KAAKgC,SAAS,CACZP,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,OAAQ,GACRC,mBAAmB,EACnBC,OAAQ,KACRC,cAAc,EACdC,mBAAmB,M,8BAIvB,WACE,IADiB,EACboB,EAAWC,SAASC,uBAAuB,wBAD9B,cAGGF,GAHH,IAGjB,2BAA8B,SACpBG,UAAUC,OAAO,WAJV,iC,0BAQnB,YAA0B,IAAD,EAAVvB,EAAU,EAAVA,OACTmB,EAAWC,SAASC,uBAAuB,iBADxB,cAGHF,GAHG,IAGvB,2BAA8B,SACpBG,UAAUC,OAAO,WAJJ,8BAMvBvB,EAAOsB,UAAUE,OAAO,UACxBvD,KAAKgC,SAAS,CAAEN,OAA6B,OAArBK,EAAOyB,UAAqB,EAAI,M,kBAG1D,SAAK/B,GAAQ,IAAD,OACV,OACE,uBAAMnB,UAAU,kBAAhB,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACdmB,EAAMgC,KAAI,SAACf,EAAMgB,GAChB,OACE,cAAC,EAAD,CACE3D,MAAO2C,EACPtC,GAAIsD,EAEJrD,aAAc,EAAKA,aACnB,cAAaqD,GAFRA,W,2BAUjB,WAAiB,IAAD,OACN/B,EAAsB3B,KAAKwB,MAA3BG,kBAER,OACE,0BAASrB,UAAU,gBAAnB,UACE,sCACA,gCACE,cAAC,EAAD,CACEW,MAAO,YAAiB,IAAdc,EAAa,EAAbA,OACR,EAAKC,SAAS,CAAEL,mBAAmB,IACnC,EAAKgC,mBACL5B,EAAOsB,UAAUE,OAAO,WAE1BxD,MAAO,MACPiB,KAAM,kBAER,cAAC,EAAD,CACEC,MAAO,YAAiB,IAAdc,EAAa,EAAbA,OACR,EAAKC,SAAS,CAAEL,mBAAmB,EAAOD,OAAQ,IAClD,EAAKiC,mBACL5B,EAAOsB,UAAUE,OAAO,WAE1BxD,MAAO,MACPiB,KAAM,qBAIV,8CACA,gCACE,cAAC,EAAD,CACEC,MAAOjB,KAAK4D,aACZ7D,MAAO,KACPiB,KAAM,0BACNE,UAAWS,IAEb,cAAC,EAAD,CACEV,MAAOjB,KAAK4D,aACZ7D,MAAO,MACPiB,KAAM,2BACNE,UAAWS,OAIf,cAAC,EAAD,CACEV,MAAO,kBACL,EAAKe,SAAS,CAAEF,mBAAmB,IAAS,WAChB,IAAtB,EAAKN,MAAME,QAAgB,EAAKF,MAAMG,mBACxC,EAAKO,eAIXnC,MAAO,QACPiB,KAAM,mB,uBAMd,SAAUY,GACR,OAAe,IAAXA,EACK,UACa,IAAXA,EACF,UAEF,U,oBAGT,WACE,MAA6C5B,KAAKwB,MAA1CC,EAAR,EAAQA,MAAOK,EAAf,EAAeA,kBAAmBF,EAAlC,EAAkCA,OAElC,OAA0B,IAAtBE,EACK,mCAAG9B,KAAK6D,kBACK,OAAXjC,EAEP,0BAAStB,UAAU,mBAAnB,UACE,oBAAIA,UAAU,eAAd,SAA8BN,KAAK8D,UAAUlC,KAC7C,cAAC,EAAD,CAAQX,MAAOjB,KAAK+D,UAAWhE,MAAO,UAAWiB,KAAM,iBAIpD,mCAAGhB,KAAKgE,KAAKvC,S,GA9PNwC,IAAOpD,IAAMC,YCV3BoD,G,wKACJ,WACE,OAAO,oBAAI5D,UAAU,QAAd,6B,GAFUO,IAAMC,YAMZoD,ICHMC,E,4JACnB,WACE,OACE,sBAAK7D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALyBQ,a,MCAjCsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,W","file":"static/js/main.d865abc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/x.4a603df1.png\";","export default __webpack_public_path__ + \"static/media/o.50ad6647.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Cell.css';\n\nimport xImage from './assets/x.png';\nimport oImage from './assets/o.png';\n\nclass Cell extends React.Component {\n  chooseImg() {\n    const { value } = this.props;\n    if (value === 1) {\n      return xImage;\n    } else if (value === 2) {\n      return oImage;\n    }\n    return 'none';\n  }\n\n  render() {\n    const { id, eventHandler } = this.props;\n\n    return (\n      <div\n        className=\"cell-container\"\n        id={id}\n        onClick={eventHandler}\n        data-testid=\"cell-container\"\n      >\n        <img\n          src={this.chooseImg()}\n          alt=\"\"\n          className=\"player-img\"\n          style={{ display: this.chooseImg() !== 'none' ? 'initial' : 'none' }}\n          data-testid={id}\n        />\n      </div>\n    );\n  }\n}\n\nCell.propTypes = {\n  value: PropTypes.any.isRequired,\n  id: PropTypes.number.isRequired,\n  eventHandler: PropTypes.func.isRequired,\n};\n\nexport default Cell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nclass Button extends React.Component {\n  render() {\n    const { name, event, value, isActive } = this.props;\n\n    return (\n      <button type=\"button\" className={name} onClick={event} disabled={isActive} >\n        {value}\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  event: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport binder from 'react-class-binder';\n\nimport Cell from '../Cell/Cell';\nimport Button from '../Button/Button';\n\nimport './Board.css';\n\nconst scores = {\n  1: 10,\n  2: -10,\n  tie: 0,\n};\n\nclass Board extends binder(React.Component) {\n  constructor() {\n    super();\n\n    this.state = {\n      board: ['', '', '', '', '', '', '', '', ''],\n      player: '',\n      isComputerPlaying: true,\n      winner: null,\n      playerPlayed: false,\n      viewInitialScreen: true,\n    };\n  }\n\n  eventHandler({ target }) {\n    const { id } = target;\n    const { player, board, isComputerPlaying } = this.state;\n    if (board[id] === '') {\n      board[id] = player;\n      this.setState({ playerPlayed: true }, () => {\n        if (isComputerPlaying && this.state.playerPlayed) {\n          this.setState({ player: this.changePlayers() }, this.bestMove);\n        } else {\n          let result = this.winner(board);\n          this.setState({ player: this.changePlayers(), winner: result });\n        }\n      });\n    }\n  }\n\n  changePlayers() {\n    const { player } = this.state;\n    return player === 1 ? 2 : 1;\n  }\n\n  winner(board) {\n    let winner = null;\n    const winChances = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    winChances.forEach((chance) => {\n      if (\n        board[chance[0]] === board[chance[1]] &&\n        board[chance[0]] === board[chance[2]] &&\n        board[chance[0]] !== ''\n      ) {\n        winner = board[chance[0]];\n      }\n    });\n\n    if (!board.includes('') && winner === null) {\n      return 'tie';\n    }\n\n    return winner;\n  }\n\n  bestMove() {\n    const { board, player } = this.state;\n    let bestScore = -Infinity;\n    let move;\n    board.forEach((cell, i) => {\n      if (cell === '') {\n        board[i] = player;\n        let score = this.minmax(board, false, player);\n        board[i] = '';\n        if (score > bestScore) {\n          bestScore = score;\n          move = i;\n        }\n      }\n    });\n\n    board[move] = 1;\n    let result = this.winner(board);\n    this.setState({\n      board: board,\n      player: this.changePlayers(),\n      winner: result,\n      playerPlayed: false,\n    });\n  }\n\n  minmax(board, isMaximizing, player) {\n    let result = this.winner(board);\n\n    if (result !== null) {\n      return scores[result];\n    }\n\n    if (isMaximizing) {\n      let bestScore = -Infinity;\n      board.forEach((cell, i) => {\n        if (cell === '') {\n          board[i] = 1;\n          let score = this.minmax(board, false, player);\n          board[i] = '';\n          bestScore = Math.max(score, bestScore);\n        }\n      });\n      return bestScore;\n    } else {\n      let bestScore = Infinity;\n      board.forEach((cell, i) => {\n        if (cell === '') {\n          board[i] = this.changePlayers();\n          let score = this.minmax(board, true, this.changePlayers());\n          board[i] = '';\n          bestScore = Math.min(score, bestScore);\n        }\n      });\n      return bestScore;\n    }\n  }\n\n  resetGame() {\n    this.setState({\n      board: ['', '', '', '', '', '', '', '', ''],\n      player: '',\n      isComputerPlaying: true,\n      winner: null,\n      playerPlayed: false,\n      viewInitialScreen: true,\n    });\n  }\n\n  checkBtnsClicked() {\n    let elements = document.getElementsByClassName('game-mode-btn active');\n\n    for (let element of elements) {\n      element.classList.remove('active');\n    }\n  }\n\n  selectPlayer({ target }) {\n    let elements = document.getElementsByClassName('player active');\n\n    for (let element of elements) {\n      element.classList.remove('active');\n    }\n    target.classList.toggle('active');\n    this.setState({ player: target.innerHTML === 'PC' ? 1 : 2 });\n  }\n\n  game(board) {\n    return (\n      <main className=\"board-container\">\n        <div className=\"column-1\" />\n        <div className=\"column-2\" />\n        <div className=\"row-1\" />\n        <div className=\"row-2\" />\n        {board.map((cell, index) => {\n          return (\n            <Cell\n              value={cell}\n              id={index}\n              key={index}\n              eventHandler={this.eventHandler}\n              data-testid={index}\n            />\n          );\n        })}\n      </main>\n    );\n  }\n\n  initialScreen() {\n    const { isComputerPlaying } = this.state;\n\n    return (\n      <section className=\"btn-container\">\n        <h3>Mode</h3>\n        <div>\n          <Button\n            event={({ target }) => {\n              this.setState({ isComputerPlaying: true });\n              this.checkBtnsClicked();\n              target.classList.toggle('active');\n            }}\n            value={'1 P'}\n            name={'game-mode-btn'}\n          />\n          <Button\n            event={({ target }) => {\n              this.setState({ isComputerPlaying: false, player: 1 });\n              this.checkBtnsClicked();\n              target.classList.toggle('active');\n            }}\n            value={'2 P'}\n            name={'game-mode-btn'}\n          />\n        </div>\n\n        <h3>First Player</h3>\n        <div>\n          <Button\n            event={this.selectPlayer}\n            value={'PC'}\n            name={'player first-player-btn'}\n            isActive={!isComputerPlaying}\n          />\n          <Button\n            event={this.selectPlayer}\n            value={'YOU'}\n            name={'player second-player-btn'}\n            isActive={!isComputerPlaying}\n          />\n        </div>\n\n        <Button\n          event={() =>\n            this.setState({ viewInitialScreen: false }, () => {\n              if (this.state.player === 1 && this.state.isComputerPlaying) {\n                this.bestMove();\n              }\n            })\n          }\n          value={'START'}\n          name={'start-btn'}\n        />\n      </section>\n    );\n  }\n\n  finalGame(winner) {\n    if (winner === 1) {\n      return 'X won !';\n    } else if (winner === 2) {\n      return 'O won !';\n    }\n    return 'Tie !';\n  }\n\n  render() {\n    const { board, viewInitialScreen, winner } = this.state;\n\n    if (viewInitialScreen === true) {\n      return <>{this.initialScreen()}</>;\n    } else if (winner !== null) {\n      return (\n        <section className=\"result-container\">\n          <h1 className=\"result-title\">{this.finalGame(winner)}</h1>\n          <Button event={this.resetGame} value={'RESTART'} name={'reset-btn'} />\n        </section>\n      );\n    } else {\n      return <>{this.game(board)}</>;\n    }\n  }\n}\n\nexport default Board;\n","import React from 'react';\n\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    return <h1 className=\"title\">Tic Tac Toe</h1>;\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nimport Board from './components/Board/Board';\n\nimport './App.css';\nimport Header from './components/Header/Header';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Board />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}